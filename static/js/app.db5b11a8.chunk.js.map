{"version":3,"sources":["screens/BookTransactionScreen.js","screens/SearchScreen.js","App.js","web-build/register-service-worker.js"],"names":["TransactionScreen","getCameraPermissions","a","async","Permissions","status","setState","hasCameraPermissions","handleBarCodeScanned","type","data","scanned","scannedData","buttonState","state","this","BarCodeScanner","onBarCodeScanned","undefined","style","StyleSheet","absoluteFillObject","View","styles","container","Text","displayText","TouchableOpacity","scanButton","onPress","React","Component","create","flex","justifyContent","alignItems","fontSize","textDecorationLine","backgroundColor","padding","margin","App","AppContainer","TabNavigator","createBottomTabNavigator","Transaction","screen","Search","SearchScreen","createAppContainer","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"wuBAKqBA,E,gCACjB,aAAc,IAAD,sBACT,gBAQJC,qBAAuB,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACIE,IAAqBA,MADzB,gBACZC,EADY,EACZA,OAEP,EAAKC,SAAS,CACVC,qBAAgC,YAAXF,IAJN,6DATV,EAgBbG,qBAAuB,2BAAAN,EAAAC,OAAA,kDAAOM,KAAMC,EAAb,EAAaA,KAChC,EAAKJ,SAAS,CACVK,SAAS,EACTC,YAAaF,EACbG,YAAa,WAJE,6DAdnB,EAAKC,MAAQ,CACTP,qBAAsB,KACtBI,SAAS,EACTC,YAAY,GACZC,YAAa,UANR,E,6CAyBT,IAAMN,EAAuBQ,KAAKD,MAAMP,qBAClCI,EAAUI,KAAKD,MAAMH,QACrBE,EAAcE,KAAKD,MAAMD,YAC/B,MAAmB,YAAhBA,GAA6BN,EAExB,kBAACS,EAAA,EAAD,CACAC,iBAAkBN,OAAUO,EAAYH,KAAKP,qBAC7CW,MAAOC,IAAWC,qBAIF,WAAhBR,EAEA,kBAACS,EAAA,EAAD,CAAMH,MAAOI,EAAOC,WAChB,kBAACC,EAAA,EAAD,CAAMN,MAAOI,EAAOG,cAAqC,IAAvBnB,EAA8BQ,KAAKD,MAAMF,YAAa,6BACxF,kBAACe,EAAA,EAAD,CACAR,MAAOI,EAAOK,WACdC,QAASd,KAAKd,sBACV,kBAACwB,EAAA,EAAD,4BAPX,M,GArCkCK,IAAMC,WAoD/CR,EAASH,IAAWY,OAAO,CAC7BR,UAAU,CACNS,KAAK,EACLC,eAAgB,SAChBC,WAAW,UAEfT,YAAY,CACRU,SAAU,GACVC,mBAAmB,aAEvBT,WAAW,CACPU,gBAAiB,UACjBC,QAAQ,GACRC,OAAO,M,8aClEMxC,E,qIAEb,OACI,kBAACsB,EAAA,EAAD,CAAMH,MAAO,CAACc,KAAK,EAAGC,eAAgB,SAAUC,WAAW,WACvD,kBAACV,EAAA,EAAD,oB,GAJ+BK,IAAMC,W,8aCKhCU,E,qIAEjB,OACE,kBAACC,EAAD,U,GAH2BZ,IAAMC,WAiBjCY,GATSvB,IAAWY,OAAO,CAC/BR,UAAW,CACTS,KAAM,EACNK,gBAAiB,OACjBH,WAAY,SACZD,eAAgB,YAICU,YAAyB,CAC5CC,YAAa,CAACC,OAAS9C,GACvB+C,OAAQ,CAACD,OAAQE,MAGbN,EAAeO,6BAAmBN,I,+DC7BpC,kBAAmBO,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,W","file":"static/js/app.db5b11a8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport * as Permissions from 'expo-permissions';\r\nimport {BarCodeScanner} from 'expo-barcode-scanner';\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            hasCameraPermissions: null,\r\n            scanned: false,\r\n            scannedData:'',\r\n            buttonState: 'normal'\r\n        }\r\n    }\r\n    getCameraPermissions = async () =>{\r\n        const {status} = await Permissions.askAsync(Permissions.CAMERA);\r\n\r\n        this.setState({\r\n            hasCameraPermissions:status === \"granted\"\r\n        })\r\n    }\r\n    handleBarCodeScanned = async({type, data})=>{\r\n        this.setState({\r\n            scanned: true,\r\n            scannedData: data,\r\n            buttonState: 'normal'\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const hasCameraPermissions = this.state.hasCameraPermissions;\r\n        const scanned = this.state.scanned;\r\n        const buttonState = this.state.buttonState;\r\n        if(buttonState === \"clicked\" && hasCameraPermissions){\r\n            return(\r\n                <BarCodeScanner\r\n                onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n                style={StyleSheet.absoluteFillObject}/>\r\n            );\r\n        }\r\n\r\n        else if(buttonState === \"normal\"){\r\n            return(\r\n                <View style={styles.container}>\r\n                    <Text style={styles.displayText}>{hasCameraPermissions===true ? this.state.scannedData: \"Request Camera Permission\"}</Text>\r\n                    <TouchableOpacity\r\n                    style={styles.scanButton}\r\n                    onPress={this.getCameraPermissions}>\r\n                        <Text>Scan QR Code</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1, \r\n        justifyContent: 'center', \r\n        alignItems:'center'\r\n    },\r\n    displayText:{\r\n        fontSize: 15,\r\n        textDecorationLine:'underline'\r\n    },\r\n    scanButton:{\r\n        backgroundColor: '#2496F3',\r\n        padding:10,\r\n        margin:10\r\n    }\r\n})","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View,TouchableOpacity } from 'react-native';\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n    render(){\r\n        return(\r\n            <View style={{flex:1, justifyContent: 'center', alignItems:'center'}}>\r\n                <Text>Search</Text>\r\n            </View>\r\n        );\r\n    }\r\n}","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {createAppContainer} from 'react-navigation';\nimport {createBottomTabNavigator} from 'react-navigation-tabs';\n\nimport TransactionScreen from './screens/BookTransactionScreen';\nimport SearchScreen from './screens/SearchScreen';\n\nexport default class App extends React.Component {\n  render(){\n    return (\n      <AppContainer />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst TabNavigator = createBottomTabNavigator({\n  Transaction: {screen:  TransactionScreen},\n  Search: {screen: SearchScreen}\n});\n\nconst AppContainer = createAppContainer(TabNavigator);","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}